[{"/Users/CodingProjects/ChatApp/client/src/index.js":"1","/Users/CodingProjects/ChatApp/client/src/App.js":"2","/Users/CodingProjects/ChatApp/client/src/components/SendMessage.js":"3","/Users/CodingProjects/ChatApp/client/src/components/Nav.js":"4","/Users/CodingProjects/ChatApp/client/src/components/Menu.js":"5"},{"size":233,"mtime":1704907643044,"results":"6","hashOfConfig":"7"},{"size":988,"mtime":1704907532311,"results":"8","hashOfConfig":"7"},{"size":3125,"mtime":1704909340292,"results":"9","hashOfConfig":"7"},{"size":5891,"mtime":1704907493034,"results":"10","hashOfConfig":"7"},{"size":2775,"mtime":1671999711976,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"ht4i4k",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"15"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/CodingProjects/ChatApp/client/src/index.js",[],[],[],"/Users/CodingProjects/ChatApp/client/src/App.js",["32","33"],[],"import React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport SendMessage from \"./components/SendMessage.js\";\nimport Nav from \"./components/Nav.js\";\nimport Menu from \"./components/Menu.js\";\nimport \"./index.css\";\nimport { useWindowSize } from \"react-hooks-window-size\";\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  let [isOpen, setOpen] = useState(false);\n  let [windowSize, setWindowSize] = useState(useWindowSize());\n  let [currTeam, setTeam] = useState(\"General\");\n  useEffect(() => {\n    console.log(windowSize.height);\n  }, []);\n\n  return (\n    <div>\n      {isOpen ? (\n        <Menu setOpen={setOpen} isOpen={isOpen} setTeam={setTeam} />\n      ) : (\n        <div></div>\n      )}\n      <Nav setOpen={setOpen} isOpen={isOpen} currTeam={currTeam} />\n      <SendMessage\n        socket={socket}\n        isOpen={isOpen}\n        height={windowSize.height}\n        currTeam={currTeam}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/CodingProjects/ChatApp/client/src/components/SendMessage.js",["34","35","36","37","38"],[],"import React, { useState, useEffect } from \"react\";\nfunction SendMessage(props) {\n  const generateRandomString = (length) => {\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let result = '';\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    return result;\n  };\n\n  let [text, setText] = useState(\"\");\n  let [formData, setFormData] = useState([]);\n\n  let [user, setUser] = useState({ id: generateRandomString(10) })\n  useEffect(() => {\n    updateChat(props.currTeam);\n  }, []);\n\n  useEffect(() => {\n    props.socket.on(\"recevied-message\", async (data) => {\n      updateChat({ team: props.currTeam });\n    });\n  }, [props.socket]);\n\n  let updateChat = async (currTeam = { team: \"General\" }) => {\n    let res = await fetch(\"http://localhost:3001/getMessage\", {\n      method: \"POST\",\n      body: JSON.stringify(currTeam),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    setFormData(await res.json());\n  };\n  let handleChange = (event) => {\n    // To get user input value to state use\n    setText(event.target.value);\n  };\n  // this is a test branch with test line 11\n  let postMessage = async (event) => {\n    // Too add message to list of messages\n    event.preventDefault();\n    if (text.length > 0) {\n      let bodyData = { message: text, team: props.currTeam, user: user.id  };\n      let res = await fetch(\"http://localhost:3001/sendmessage\", {\n        method: \"POST\",\n        body: JSON.stringify(bodyData),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      props.socket.emit(\"send-message\", \"data\");\n      updateChat(bodyData);\n    } else {\n      console.log(\"Please Enter A Message\");\n    }\n    setText(\"\");\n  };\n\n  return (\n    <div class=\"mt-[6em]\">\n      <form\n        onSubmit={postMessage}\n        class=\"bottom-[5px] fixed flex items-center w-screen\"\n      >\n        <input\n          onChange={handleChange}\n          value={text}\n          class=\"rounded-full pl-2 py-1 mt[1em] border-black border-[1px] border-solid w-full mx-[16px]\"\n        ></input>\n        <button\n          type=\"submit\"\n          class=\"circle bg-[#2B8FFC] rounded-full absolute right-[19px]\"\n        ></button>\n      </form>\n      {formData && (\n        <div className={`flex flex-col overflow-scroll main-content`}>\n          {formData.map((message) => {\n            if (message.user == user.id) {\n              return (\n                <div class=\"ml-[33%] mr-[8px]\">\n                  <p class=\"bg-[#2B8FFC] rounded-xl pl-[1em] py-[.2em] my-2 text-left\">\n                    {message.message}\n                  </p>\n                </div>\n              );\n            } else {\n              return (\n                <div class=\"mr-[33%] ml-[8px]\">\n                  <p class=\"bg-[#dae8f6] rounded-xl pl-[1em] py-[.2em] my-2 text-left\">\n                    {message.message}\n                  </p>\n                </div>\n              );\n            }\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SendMessage;\n","/Users/CodingProjects/ChatApp/client/src/components/Nav.js",["39","40","41","42","43","44"],[],"import React, { useEffect, useState } from \"react\";\nimport General from \"../american-football-player.png\";\nimport friends from \"../iconFolder/friends.png\";\nimport more from \"../iconFolder/more.png\";\nimport Menu from \"./Menu\";\nimport Falcons from \"../iconFolder/README.png\";\nimport Seahawks from \"../iconFolder/nfl-seattle-seahawks-team-logo-2-768x768.png\";\nimport Panthers from \"../iconFolder/nfl-carolina-panthers-team-logo-2-768x768.png\";\nimport Ravens from \"../iconFolder/nfl-baltimore-ravens-team-logo-2-768x768.png\";\nimport Bills from \"../iconFolder/nfl-buffalo-bills-team-logo-2-768x768.png\";\nimport Bengals from \"../iconFolder/nfl-cincinnati-bengals-team-logo-768x768.png\";\nimport Bears from \"../iconFolder/nfl-chicago-bears-team-logo-2-768x768.png\";\nimport Browns from \"../iconFolder/nfl-cleveland-browns-team-logo-2-768x768.png\";\nimport Cowboys from \"../iconFolder/nfl-dallas-cowboys-team-logo-2-768x768.png\";\nimport Broncos from \"../iconFolder/nfl-denver-broncos-team-logo-2-768x768.png\";\nimport Texans from \"../iconFolder/nfl-houston-texans-team-logo-2-768x768.png\";\nimport Lions from \"../iconFolder/nfl-detroit-lions-team-logo-2-768x768.png\";\nimport Colts from \"../iconFolder/nfl-indianapolis-colts-team-logo-2-768x768.png\";\nimport Packers from \"../iconFolder/nfl-green-bay-packers-team-logo-2-768x768.png\";\nimport Rams from \"../iconFolder/los-angeles-rams-2020-logo-300x300.png\";\nimport Jaguars from \"../iconFolder/nfl-jacksonville-jaguars-team-logo-2-768x768.png\";\nimport Vikings from \"../iconFolder/nfl-minnesota-vikings-team-logo-2-768x768.png\";\nimport Chiefs from \"../iconFolder/nfl-kansas-city-chiefs-team-logo-2-768x768.png\";\nimport Saints from \"../iconFolder/nfl-new-orleans-saints-team-logo-2-768x768.png\";\nimport Raiders from \"../iconFolder/nfl-oakland-raiders-team-logo-768x768.png\";\nimport Giants from \"../iconFolder/nfl-new-york-giants-team-logo-2-768x768.png\";\nimport Chargers from \"../iconFolder/nfl-los-angeles-chargers-team-logo-2-768x768.png\";\nimport Eagles from \"../iconFolder/nfl-philadelphia-eagles-team-logo-2-768x768.png\";\nimport Dolphins from \"../iconFolder/nfl-miami-dolphins-logo-2018-480x480.png\";\nimport f49ers from \"../iconFolder/nfl-san-francisco-49ers-team-logo-2-768x768.png\";\nimport Patriots from \"../iconFolder/nfl-new-england-patriots-team-logo-2-768x768.png\";\nimport Jets from \"../iconFolder/nfl-new-york-jets-team-logo-768x768.png\";\nimport Steelers from \"../iconFolder/nfl-pittsburgh-steelers-team-logo-2-768x768.png\";\nimport Titans from \"../iconFolder/nfl-tennessee-titans-team-logo-2-768x768.png\";\nimport Commanders from \"../iconFolder/washington-commanders-logo-480x480.png\";\nimport Buccaneers from \"../iconFolder/tampa-bay-buccaneers-2020-logo-480x480.png\";\nimport Cardinals from \"../iconFolder/nfl-arizona-cardinals-team-logo-2.png\";\nconst Nav = (props) => {\n  let [teamImage, setImage] = useState(\"../american-football-player.png\");\n\n  useEffect(() => {\n    console.log(props.currTeam);\n    switch (props.currTeam) {\n      case \"General\":\n        setImage(General);\n        break;\n      case \"Cardinals\":\n        setImage(Cardinals);\n        break;\n      case \"Falcons\":\n        setImage(Falcons);\n        break;\n      case \"Panthers\":\n        setImage(Panthers);\n        break;\n      case \"Ravens\":\n        setImage(Ravens);\n        break;\n      case \"Bills\":\n        setImage(Bills);\n        break;\n      case \"Bengals\":\n        setImage(Bengals);\n        break;\n      case \"Bears\":\n        setImage(Bears);\n        break;\n      case \"Cowboys\":\n        setImage(Cowboys);\n        break;\n      case \"Lions\":\n        setImage(Lions);\n        break;\n      case \"Packers\":\n        setImage(Packers);\n        break;\n      case \"Rams\":\n        setImage(Rams);\n        break;\n      case \"Browns\":\n        setImage(Browns);\n        break;\n      case \"Broncos\":\n        setImage(Broncos);\n        break;\n      case \"Texans\":\n        setImage(Texans);\n        break;\n      case \"Colts\":\n        setImage(Colts);\n        break;\n      case \"Jaguars\":\n        setImage(Jaguars);\n        break;\n      case \"Vikings\":\n        setImage(Vikings);\n        break;\n      case \"Chiefs\":\n        setImage(Chiefs);\n        break;\n      case \"Raiders\":\n        setImage(Raiders);\n        break;\n      case \"Saints\":\n        setImage(Saints);\n        break;\n      case \"Giants\":\n        setImage(Giants);\n        break;\n      case \"Eagles\":\n        setImage(Eagles);\n        break;\n      case \"Dolphins\":\n        setImage(Dolphins);\n        break;\n      case \"49ers\":\n        setImage(f49ers);\n        break;\n      case \"Patriots\":\n        setImage(Patriots);\n        break;\n      case \"Seahawks\":\n        setImage(Seahawks);\n        break;\n      case \"Jets\":\n        setImage(Jets);\n        break;\n      case \"Buccaneers\":\n        setImage(Buccaneers);\n        break;\n      case \"Steelers\":\n        setImage(Steelers);\n        break;\n      case \"Commanders\":\n        setImage(Commanders);\n        break;\n      case \"Titans\":\n        setImage(Titans);\n        break;\n      case \"Chargers\":\n        setImage(Chargers);\n        break;\n    }\n  }, [props.currTeam]);\n  return (\n    <div>\n      <ul class=\"bg-[#DA1E55] py-[8px] flex justify-around fixed w-screen top-0 z-30 items-center\">\n        <button\n          onClick={() => {\n            if (props.isOpen == false) {\n              props.setOpen(true);\n            } else {\n              props.setOpen(false);\n            }\n          }}\n        >\n          <img\n            className=\"w-[2em] h-[2em]\"\n            src={more}\n            alt=\"description of image\"\n          />\n        </button>\n\n        <img\n          className=\"w-[5em] h-[5em] md:mx-[10em]\"\n          src={teamImage}\n          alt=\"description of image\"\n        />\n        <img\n          className=\"w-[2em] h-[2em]\"\n          src={friends}\n          alt=\"description of image\"\n        />\n      </ul>\n    </div>\n  );\n};\n\nexport default Nav;\n","/Users/CodingProjects/ChatApp/client/src/components/Menu.js",["45","46","47"],[],"import React, { useEffect, useState } from \"react\";\n\nconst Menu = (props) => {\n  let [teamList, setTeam] = useState([\n    \"General\",\n    \"49ers\",\n    \"Bears\",\n    \"Bengals\",\n    \"Bills\",\n    \"Broncos\",\n    \"Browns\",\n    \"Buccaneers\",\n    \"Cardinals\",\n    \"Chargers\",\n    \"Chiefs\",\n    \"Colts\",\n    \"Commanders\",\n    \"Cowboys\",\n    \"Dolphins\",\n    \"Eagles\",\n    \"Falcons\",\n    \"Giants\",\n    \"Jaguars\",\n    \"Jets\",\n    \"Lions\",\n    \"Packers\",\n    \"Panthers\",\n    \"Patriots\",\n    \"Raiders\",\n    \"Rams\",\n    \"Ravens\",\n    \"Saints\",\n    \"Seahawks\",\n    \"Steelers\",\n    \"Texans\",\n    \"Titans\",\n    \"Vikings\",\n  ]);\n  let [text, setText] = useState(\"\");\n  let [display, setDisplay] = useState([]);\n  let search = (text) => {\n    let count = 0;\n    setDisplay([]);\n    for (let i = 0; i < 32; i++) {\n      if (text === teamList[i].slice(0, text.length)) {\n        setDisplay((teams) => [...teams, teamList[i]]);\n        count++;\n        if (count > 8) {\n          break;\n        }\n      }\n    }\n  };\n\n  let handleChange = (event) => {\n    setText(event.target.value);\n  };\n\n  useEffect(() => {\n    search(text);\n  }, [text]);\n\n  return (\n    <wrapper>\n      <div\n        class=\"overlay\"\n        onClick={() => {\n          if (props.isOpen == true) {\n            props.setOpen(false);\n          }\n        }}\n      >\n        <div\n          class=\"modalContainer flex flex-col items-center\"\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <form\n            onSubmit={search}\n            class=\"flex items-center w-screen mt-[16px] mb-0\"\n          >\n            <input\n              onChange={handleChange}\n              value={text}\n              class=\"rounded-full pl-2 py-1 mt[1em] border-black border-[1px] border-solid w-full mx-[16px] mb-0\"\n            ></input>\n            <button\n              type=\"submit\"\n              class=\"search absolute right-[30px] mb-0\"\n            ></button>\n          </form>\n          <div>\n            {display && (\n              <div className={`flex flex-col w-screen`}>\n                {display.map((team) => {\n                  return (\n                    <div>\n                      <p\n                        class=\"bg-[#ffffff] hover:bg-gray-100 delay-[25ms] border-[#000000] border-b-2 py-2 text-center mx-[32px] shadow-black shadow-md cursor-pointer\"\n                        onClick={() => {\n                          props.setTeam(team);\n                          props.setOpen(false);\n                        }}\n                      >\n                        {team}\n                      </p>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </wrapper>\n  );\n};\n\nexport default Menu;\n",{"ruleId":"48","severity":1,"message":"49","line":12,"column":20,"nodeType":"50","messageId":"51","endLine":12,"endColumn":33},{"ruleId":"52","severity":1,"message":"53","line":16,"column":6,"nodeType":"54","endLine":16,"endColumn":8,"suggestions":"55"},{"ruleId":"48","severity":1,"message":"56","line":15,"column":14,"nodeType":"50","messageId":"51","endLine":15,"endColumn":21},{"ruleId":"52","severity":1,"message":"57","line":18,"column":6,"nodeType":"54","endLine":18,"endColumn":8,"suggestions":"58"},{"ruleId":"52","severity":1,"message":"57","line":24,"column":6,"nodeType":"54","endLine":24,"endColumn":20,"suggestions":"59"},{"ruleId":"48","severity":1,"message":"60","line":46,"column":11,"nodeType":"50","messageId":"51","endLine":46,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":80,"column":30,"nodeType":"63","messageId":"64","endLine":80,"endColumn":32},{"ruleId":"48","severity":1,"message":"65","line":5,"column":8,"nodeType":"50","messageId":"51","endLine":5,"endColumn":12},{"ruleId":"66","severity":1,"message":"67","line":43,"column":5,"nodeType":"68","messageId":"69","endLine":143,"endColumn":6},{"ruleId":"61","severity":1,"message":"62","line":150,"column":30,"nodeType":"63","messageId":"64","endLine":150,"endColumn":32},{"ruleId":"70","severity":1,"message":"71","line":157,"column":11,"nodeType":"72","endLine":161,"endColumn":13},{"ruleId":"70","severity":1,"message":"71","line":164,"column":9,"nodeType":"72","endLine":168,"endColumn":11},{"ruleId":"70","severity":1,"message":"71","line":169,"column":9,"nodeType":"72","endLine":173,"endColumn":11},{"ruleId":"48","severity":1,"message":"73","line":4,"column":18,"nodeType":"50","messageId":"51","endLine":4,"endColumn":25},{"ruleId":"52","severity":1,"message":"74","line":61,"column":6,"nodeType":"54","endLine":61,"endColumn":12,"suggestions":"75"},{"ruleId":"61","severity":1,"message":"62","line":68,"column":28,"nodeType":"63","messageId":"64","endLine":68,"endColumn":30},"no-unused-vars","'setWindowSize' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'windowSize.height'. Either include it or remove the dependency array.","ArrayExpression",["76"],"'setUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.currTeam'. Either include it or remove the dependency array.",["77"],["78"],"'res' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Menu' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'setTeam' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'search'. Either include it or remove the dependency array.",["79"],{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},"Update the dependencies array to be: [windowSize.height]",{"range":"88","text":"89"},"Update the dependencies array to be: [props.currTeam]",{"range":"90","text":"91"},"Update the dependencies array to be: [props.currTeam, props.socket]",{"range":"92","text":"93"},"Update the dependencies array to be: [search, text]",{"range":"94","text":"95"},[587,589],"[windowSize.height]",[598,600],"[props.currTeam]",[739,753],"[props.currTeam, props.socket]",[1109,1115],"[search, text]"]