{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport const useWindowSize = function () {\n  let ssrWidth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1280;\n  let ssrHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1024;\n  const [windowSize, setWindowSize] = useState(() => typeof window !== 'undefined' ? {\n    width: window.innerWidth,\n    height: window.innerHeight\n  } : {\n    width: ssrWidth,\n    height: ssrHeight\n  });\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const onResize = () => setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n      window.addEventListener('resize', onResize);\n      return () => window.removeEventListener('resize', onResize);\n    }\n  });\n  return windowSize;\n};","map":{"version":3,"mappings":"AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,aAAa,GAAG,YAAyE;EAAA,IAAxEC,QAAQ,uEAAG,IAAI;EAAA,IAAEC,SAAS,uEAAG,IAAI;EAC7D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,MAC3C,OAAOO,MAAM,KAAK,WAAW,GACzB;IACEC,KAAK,EAAED,MAAM,CAACE,UAAU;IACxBC,MAAM,EAAEH,MAAM,CAACI;GAChB,GACD;IACEH,KAAK,EAAEL,QAAQ;IACfO,MAAM,EAAEN;GACT,CACN;EAEDH,SAAS,CAAC,MAAK;IACb,IAAI,OAAOM,MAAM,KAAK,WAAW,EAAE;MACjC,MAAMK,QAAQ,GAAG,MAAMN,aAAa,CAAC;QAAEE,KAAK,EAAED,MAAM,CAACE,UAAU;QAAEC,MAAM,EAAEH,MAAM,CAACI;MAAW,CAAE,CAAC;MAC9FJ,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAED,QAAQ,CAAC;MAC3C,OAAO,MAAML,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAEF,QAAQ,CAAC;;EAE/D,CAAC,CAAC;EAEF,OAAOP,UAAU;AACnB,CAAC","names":["useState","useEffect","useWindowSize","ssrWidth","ssrHeight","windowSize","setWindowSize","window","width","innerWidth","height","innerHeight","onResize","addEventListener","removeEventListener"],"sources":["/Users/CodingProjects/ChatApp/client/node_modules/react-hooks-window-size/src/index.ts"],"sourcesContent":["import { useState, useEffect } from 'react'\n\nexport const useWindowSize = (ssrWidth = 1280, ssrHeight = 1024): { width: number; height: number } => {\n  const [windowSize, setWindowSize] = useState(() =>\n    typeof window !== 'undefined'\n      ? {\n          width: window.innerWidth,\n          height: window.innerHeight\n        }\n      : {\n          width: ssrWidth,\n          height: ssrHeight\n        }\n  )\n\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const onResize = () => setWindowSize({ width: window.innerWidth, height: window.innerHeight })\n      window.addEventListener('resize', onResize)\n      return () => window.removeEventListener('resize', onResize)\n    }\n  })\n\n  return windowSize\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}