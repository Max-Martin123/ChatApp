{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAAA,+BAA2C;AAE9B,QAAA,aAAa,GAAG,UAAC,QAAe,EAAE,SAAgB;IAAjC,yBAAA,EAAA,eAAe;IAAE,0BAAA,EAAA,gBAAgB;IACvD,IAAA;;;;;;;;;;UAUL,EAVM,kBAAU,EAAE,qBAUlB,CAAA;IAED,iBAAS,CAAC;QACR,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE;YACjC,IAAM,UAAQ,GAAG,cAAM,OAAA,aAAa,CAAC,EAAE,KAAK,EAAE,MAAM,CAAC,UAAU,EAAE,MAAM,EAAE,MAAM,CAAC,WAAW,EAAE,CAAC,EAAvE,CAAuE,CAAA;YAC9F,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAQ,CAAC,CAAA;YAC3C,OAAO,cAAM,OAAA,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,UAAQ,CAAC,EAA9C,CAA8C,CAAA;SAC5D;IACH,CAAC,CAAC,CAAA;IAEF,OAAO,UAAU,CAAA;AACnB,CAAC,CAAA","sourcesContent":["import { useState, useEffect } from 'react'\n\nexport const useWindowSize = (ssrWidth = 1280, ssrHeight = 1024): { width: number; height: number } => {\n  const [windowSize, setWindowSize] = useState(() =>\n    typeof window !== 'undefined'\n      ? {\n          width: window.innerWidth,\n          height: window.innerHeight\n        }\n      : {\n          width: ssrWidth,\n          height: ssrHeight\n        }\n  )\n\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      const onResize = () => setWindowSize({ width: window.innerWidth, height: window.innerHeight })\n      window.addEventListener('resize', onResize)\n      return () => window.removeEventListener('resize', onResize)\n    }\n  })\n\n  return windowSize\n}\n"]}